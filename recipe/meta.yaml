{% set name = "quickjs" %}
{% set version = "1.19.4" %}

package:
  # The package is named python-quickjs to leave `quickjs` available for a binary of the wrapped library
  name: python-{{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 1205953abc24ff757f4a795304d5d61e4bf1e555c9ef6ec96a132d4b95535484
  patches:
    - patches/0001-setup.patch
    - patches/0002-fix-windows-msvc-compiler-flags.patch
    - patches/0003-fix-windows-msvc-c-compatibility.patch

build:
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation

requirements:
  build:
    - {{ compiler('c') }}  # [not win]
    - {{ stdlib("c") }}    # [not win]
  host:
    - libpython  # [win]
    - python
    - pip
    - setuptools
  run:
    - python

test:
  files:
    - test_quickjs.py
  imports:
    - quickjs
  requires:
    - pip
  commands:
    - pip check
    - python -m unittest

about:
  home: https://github.com/PetterS/quickjs
  summary: 'Wrapping the quickjs C library.'
  description: |
    Python wrapper around https://bellard.org/quickjs/
    Translates types like str, float, bool, list, dict and combinations thereof to and from Javascript.
    QuickJS is currently thread-hostile, so this wrapper makes sure that all calls to the same JS runtime comes from the same thead.
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - LICENSE-quickjs
  doc_url: https://bellard.org/quickjs/
  dev_url: https://github.com/PetterS/quickjs

extra:
  recipe-maintainers:
    - m-rossi
    - fcollonval
